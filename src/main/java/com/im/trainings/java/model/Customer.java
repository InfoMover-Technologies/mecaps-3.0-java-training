package com.im.trainings.java.model;


import lombok.Data;


/**
 * Customer defines the lineage
 */
@Data
public abstract class  Customer implements Comparable<Customer> {

    // Setters and Getters are automatically generated by lombok.
    private int id;
    private String name;
    private String customerType; // E [ExportCustomer] | L [LocalCustomer] -

    // Generalized Behavior [Generalization]
    public void printCustomerDetails() {
        System.out.println("Id : " + this.id + " -- name : " + this.name + " -- " + this.getClass().getName());
    }




    /**
     * Open Closed Principle - Open for extension and closed for modification
     * SRP [Single Responsibility Principle] - A class must change for one reason
     */

    public abstract void generateCreditBalance();

//    public void generateCreditBalance() {
//        /**
//         *
//         */
//
//        if (customerType.equals("E")) {
//
//            /**
//             * Logic of calculating or generating the credit balance for those customers that are Export Customers
//             */
//            System.out.println("Generating creditBalance for Export Customer");
//
//        } else if (customerType.equals("L")) {
//            /**
//             * Logic of calculating or generating the credit balance for those customers that are Local Customers
//             */
//            System.out.println("Generating creditBalance for Local Customer");
//
//        }
//
//    }

    @Override
    public int compareTo(Customer o) {
        return Integer.compare(this.id, ((Customer) o).id);
    }
}
